/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package com.codechum.awt.eventListeners;

import java.awt.Color;

/**
 *
 * @author alysa
 */
public class PasswordValidator extends java.awt.Frame {

    /**
     * Creates new form AWTEventAdapter2
     */
    public PasswordValidator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField1 = new java.awt.TextField();
        label1 = new java.awt.Label();

        setTitle("Password Validation");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textField1.setEchoChar('*');
        textField1.setName("passwordTextField"); // NOI18N
        textField1.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                textField1TextValueChanged(evt);
            }
        });
        add(textField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 190, 20));

        label1.setForeground(new java.awt.Color(255, 0, 0));
        label1.setName("statusLabel"); // NOI18N
        add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 300, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void textField1TextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_textField1TextValueChanged
        // TODO add your handling code here:

        // Password validation in which password must be 8 characters long, must contain at least one digit and one special character
        // if anything is missing put a message in the status label
        String password = textField1.getText();
        if (password.length() < 8) {
            label1.setText("Password must be 8 characters long");
        } else {
            boolean digitFound = false;
            boolean specialFound = false;
            for (int i = 0; i < password.length(); i++) {
                char ch = password.charAt(i);
                if (Character.isDigit(ch)) {
                    digitFound = true;
                } else if (!Character.isLetterOrDigit(ch)) {
                    specialFound = true;
                }
            }
            if (!digitFound) {
                label1.setText("Password must contain at least one digit");
            } else if (!specialFound) {
                label1.setText("Password must contain at least one special character");
            } else {
                label1.setForeground(Color.green);
                label1.setText("Password is valid");
            }
        }
        
    }//GEN-LAST:event_textField1TextValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PasswordValidator().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label label1;
    private java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables
}
