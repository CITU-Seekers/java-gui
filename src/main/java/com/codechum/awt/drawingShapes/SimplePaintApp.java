/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package com.codechum.awt.drawingShapes;

import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author alysa
 */
public class SimplePaintApp extends java.awt.Frame {

    /**
     * Creates new form SimplePaint
     */

    private int startX, startY, endX, endY;
    private String selectedShape = "Rectangle";
    private Color selectedColor = Color.RED;

    public SimplePaintApp() {
        initComponents();
        setTitle("Simple Paint App");
        canvas2.setBackground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        canvas2 = new java.awt.Canvas();
        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menuItem1 = new java.awt.MenuItem();
        menuItem2 = new java.awt.MenuItem();
        menuItem3 = new java.awt.MenuItem();
        menu2 = new java.awt.Menu();
        menuItem4 = new java.awt.MenuItem();
        menuItem5 = new java.awt.MenuItem();
        menuItem6 = new java.awt.MenuItem();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        canvas2.setName("mainCanvas"); // NOI18N
        canvas2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                canvas2MousePressed(evt);
            }

            public void mouseReleased(java.awt.event.MouseEvent evt) {
                canvas2MouseReleased(evt);
            }

            public void mouseDragged(java.awt.event.MouseEvent evt) {
                canvas2mouseDragged(evt);
            }
        });
        add(canvas2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 580, 340));

        menuBar1.setName("menuBar");

        menu1.setLabel("Shapes");
        menu1.setName("shapesMenu");

        menuItem1.setLabel("Rectangle");
        menuItem1.setName("rectangleMenuItem");
        menuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem1ActionPerformed(evt);
            }
        });
        menu1.add(menuItem1);

        menuItem2.setLabel("Circle");
        menuItem2.setName("circleMenuItem");
        menuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem2ActionPerformed(evt);
            }
        });
        menu1.add(menuItem2);

        menuItem3.setLabel("Lines");
        menuItem3.setName("linesMenuItem");
        menuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem3ActionPerformed(evt);
            }
        });
        menu1.add(menuItem3);

        menuBar1.add(menu1);

        menu2.setLabel("Colors");
        menu2.setName("colorsMenu");

        menuItem4.setLabel("Red");
        menuItem4.setName("redMenuItem");
        menuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem4ActionPerformed(evt);
            }
        });
        menu2.add(menuItem4);

        menuItem5.setLabel("Green");
        menuItem5.setName("greenMenuItem");
        menuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem5ActionPerformed(evt);
            }
        });
        menu2.add(menuItem5);

        menuItem6.setLabel("Blue");
        menuItem6.setName("blueMenuItem");
        menuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem6ActionPerformed(evt);
            }
        });
        menu2.add(menuItem6);

        menuBar1.add(menu2);

        setMenuBar(menuBar1);

        pack();
    }// </editor-fold>

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {
        System.exit(0);
    }

    private void canvas2MousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        startX = evt.getX();
        startY = evt.getY();
    }

    private void canvas2MouseReleased(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        endX = evt.getX();
        endY = evt.getY();

        Graphics g = canvas2.getGraphics();
        g.setColor(selectedColor);

        switch (selectedShape) {
            case "Rectangle":
                g.drawRect(startX, startY, endX - startX, endY - startY);
                break;
            case "Circle":
                g.drawOval(startX, startY, endX - startX, endY - startY);
                break;
            case "Lines":
                g.drawLine(startX, startY, endX, endY);
                break;
            default:
                break;
        }
    }

    private void canvas2mouseDragged(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        endX = evt.getX();
        endY = evt.getY();

        Graphics g = canvas2.getGraphics();
        g.setColor(selectedColor);

        switch (selectedShape) {
            case "Rectangle":
                g.drawRect(startX, startY, endX - startX, endY - startY);
                break;
            case "Circle":
                g.drawOval(startX, startY, endX - startX, endY - startY);
                break;
            case "Lines":
                g.drawLine(startX, startY, endX, endY);
                break;
            default:
                break;
        }
    }

    private void menuItem1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        selectedShape = "Rectangle";
    }

    private void menuItem2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        selectedShape = "Circle";
    }

    private void menuItem3ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        selectedShape = "Lines";
    }

    private void menuItem4ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        selectedColor = Color.RED;
    }

    private void menuItem5ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        selectedColor = Color.GREEN;
    }

    private void menuItem6ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        selectedColor = Color.BLUE;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimplePaintApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private java.awt.Canvas canvas2;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private java.awt.MenuItem menuItem1;
    private java.awt.MenuItem menuItem2;
    private java.awt.MenuItem menuItem3;
    private java.awt.MenuItem menuItem4;
    private java.awt.MenuItem menuItem5;
    private java.awt.MenuItem menuItem6;
    // End of variables declaration
}