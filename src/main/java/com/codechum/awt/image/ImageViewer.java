/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package com.codechum.awt.image;

/**
 *
 * @author alysa
 */

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

public class ImageViewer extends java.awt.Frame {

    /**
     * Creates new form ImageViewer
     */

    private Panel imagePanel;
    private Label statusLabel;
    private FileDialog fileDialog;
    private BufferedImage displayedImage;

    private static final int MAX_CANVAS_WIDTH = 500;
    private static final int MAX_CANVAS_HEIGHT = 500;

    public ImageViewer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        setTitle("Image Viewer");
        setSize(500, 500);
        setLayout(new BorderLayout());

        // Image Display Panel
        imagePanel = new Panel() {
            @Override
            public void paint(Graphics g) {
                super.paint(g);
                displayImage(g);
            }
        };
        add(imagePanel, BorderLayout.CENTER);
        imagePanel.setName("imagePanel");

        // Control Panel
        Panel controlPanel = new Panel();
        Button openButton = new Button("Open");
        openButton.setName("openButton");
        openButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                openImage();
            }
        });
        controlPanel.add(openButton);
        controlPanel.setName("controlPanel");

        // Status Label
        statusLabel = new Label("Status: No Image");
        statusLabel.setName("statusLabel");
        add(statusLabel, BorderLayout.SOUTH);

        // File Dialog
        fileDialog = new FileDialog(this, "Open Image", FileDialog.LOAD);
        fileDialog.setFile("*.jpg;*.jpeg;*.png");
        fileDialog.setDirectory("D:\\CodeChum\\TESTING");
        fileDialog.setName("fileDialog");

        add(controlPanel, BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_exitForm
        System.exit(0);
    }// GEN-LAST:event_exitForm

    private void openImage() {
        fileDialog.setVisible(true);

        String directory = fileDialog.getDirectory();
        String file = fileDialog.getFile();

        if (directory != null && file != null) {
            String filePath = directory + file;

            try {
                BufferedImage img = ImageIO.read(new File(filePath));
                resizeImage(img);
                displayedImage = img;
                statusLabel.setText("Status: Image Loaded - " + file);
            } catch (IOException e) {
                statusLabel.setText("Status: Error Loading Image");
                e.printStackTrace();
            }
        } else {
            statusLabel.setText("Status: No Image Selected");
        }
    }

    private void resizeImage(BufferedImage originalImage) {
        int originalWidth = originalImage.getWidth();
        int originalHeight = originalImage.getHeight();

        double widthScale = (double) MAX_CANVAS_WIDTH / originalWidth;
        double heightScale = (double) MAX_CANVAS_HEIGHT / originalHeight;
        double scale = Math.min(widthScale, heightScale);

        int newWidth = (int) (originalWidth * scale);
        int newHeight = (int) (originalHeight * scale);

        displayedImage = new BufferedImage(newWidth, newHeight, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2d = displayedImage.createGraphics();
        g2d.drawImage(originalImage, 0, 0, newWidth, newHeight, null);
        g2d.dispose();
    }

    private void displayImage(Graphics g) {
        if (displayedImage != null) {
            g.drawImage(displayedImage, 0, 0, imagePanel);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImageViewer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
