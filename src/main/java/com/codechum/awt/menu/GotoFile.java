package com.codechum.awt.menu;

import java.awt.MenuItem;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class GoToFile extends java.awt.Frame implements ActionListener {

    /**
     * Creates new form CODECHUMACTIVITY
     */
    public GoToFile() {
        initComponents();
        MenuItem mnuNew = new MenuItem("New");
        MenuItem mnuOpen = new MenuItem("Open"); 
        MenuItem mnuSave = new MenuItem("Save"); 
        MenuItem mnuExit = new MenuItem("Exit");
        
        mnuNew.setName("newMenuItem");
        mnuOpen.setName("openMenuItem");
        mnuSave.setName("saveMenuItem");
        mnuExit.setName("exitMenuItem");
        
        fileMenu.add(mnuNew);
        fileMenu.add(mnuOpen);
        fileMenu.add(mnuSave);
        fileMenu.addSeparator();
        fileMenu.add(mnuExit);
        
        mnuNew.addActionListener(this);
        mnuOpen.addActionListener(this);
        mnuSave.addActionListener(this);
        mnuExit.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statusLabel = new java.awt.Label();
        menuBar1 = new java.awt.MenuBar();
        fileMenu = new java.awt.Menu();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        statusLabel.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        statusLabel.setName("statusLabel"); // NOI18N
        statusLabel.setText("");

        menuBar1.setName("menuBar");

        fileMenu.setLabel("File");
        fileMenu.setName("fileMenu");
        menuBar1.add(fileMenu);

        setMenuBar(menuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GoToFile().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label statusLabel;
    private java.awt.Menu fileMenu;
    private java.awt.MenuBar menuBar1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
       MenuItem menu = (MenuItem) e.getSource();
       
       if (menu.getName().equals("newMenuItem")) {
           statusLabel.setText("Creating new file...");
       } else if (menu.getName().equals("openMenuItem")) {
           statusLabel.setText("Opening file...");
       } else if (menu.getName().equals("saveMenuItem")) {
           statusLabel.setText("Saving file...");
       } else if (menu.getName().equals("exitMenuItem")) {
           this.dispose();
       }
    }
}
